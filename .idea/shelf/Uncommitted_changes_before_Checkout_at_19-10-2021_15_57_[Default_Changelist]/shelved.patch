Index: GSMATest/src/main/java/com/gsmasdk/gsmatest/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gsmasdk.gsmatest;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.gsmaSdk.gsma.controllers.SDKManager;\r\nimport com.gsmaSdk.gsma.enums.AuthenticationType;\r\nimport com.gsmaSdk.gsma.interfaces.BalanceInterface;\r\nimport com.gsmaSdk.gsma.interfaces.PaymentInitialiseInterface;\r\nimport com.gsmaSdk.gsma.interfaces.RefundInterface;\r\nimport com.gsmaSdk.gsma.interfaces.RequestStateInterface;\r\nimport com.gsmaSdk.gsma.interfaces.TransactionInterface;\r\nimport com.gsmaSdk.gsma.manager.PreferenceManager;\r\nimport com.gsmaSdk.gsma.models.Balance;\r\nimport com.gsmaSdk.gsma.models.Refund;\r\nimport com.gsmaSdk.gsma.models.RequestStateObject;\r\nimport com.gsmaSdk.gsma.models.Token;\r\nimport com.gsmaSdk.gsma.models.common.ErrorObject;\r\nimport com.gsmaSdk.gsma.models.transaction.CreditPartyItem;\r\nimport com.gsmaSdk.gsma.models.transaction.DebitPartyItem;\r\nimport com.gsmaSdk.gsma.models.transaction.TransactionObject;\r\nimport com.gsmaSdk.gsma.models.transaction.TransactionRequest;\r\nimport com.gsmaSdk.gsma.models.common.GSMAError;\r\nimport com.gsmaSdk.gsma.network.retrofit.GSMAApi;\r\nimport com.gsmaSdk.gsma.network.retrofit.PaymentConfiguration;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\n/**\r\n * Activity for testing APIs\r\n */\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private TextView txtResponse;\r\n    private TransactionRequest transactionRequest;\r\n    private String transactionRef=\"\";\r\n    private String serverCorrelationId=\"\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button btnToken = findViewById(R.id.btnGenerateToken);\r\n        Button btnBalance = findViewById(R.id.btnCheckBalance);\r\n        Button btnPayeeInitiated = findViewById(R.id.btnPayeeInitiated);\r\n        Button btnTransaction = findViewById(R.id.btnViewTransaction);\r\n        Button btnRequestState = findViewById(R.id.btnRequestState);\r\n        Button btnRefund=findViewById(R.id.btnRefund);\r\n        txtResponse = findViewById(R.id.txtResponse);\r\n\r\n        /**\r\n         * Configure the payment system\r\n         * Initialise the payment system\r\n         * consumerkey,cosumersecret,level of authentication,callbackurl\r\n         //         */\r\n\r\n\r\n        PaymentConfiguration.\r\n                init(\"59vthmq3f6i15v6jmcjskfkmh\",\r\n                        \"ef8tl4gihlpfd7r8jpc1t1nda33q5kcnn32cj375lq6mg2nv7rb\"\r\n           ,AuthenticationType.STANDARD_LEVEL,\"https://www.google.com/\");\r\n////\r\n//\r\n//        /**\r\n//         * Configure the payment system\r\n//         * Initialise the payment system\r\n//         * consumerkey,cosumersecret,level of authentication,callbackurl,XAPI key\r\n//         */\r\n//        PaymentConfiguration.\r\n//                init(\"59vthmq3f6i15v6jmcjskfkmh\",\r\n//                        \"ef8tl4gihlpfd7r8jpc1t1nda33q5kcnn32cj375lq6mg2nv7rb\"\r\n//                        ,AuthenticationType.STANDARD_LEVEL,\"https://www.google.com/\",\"243343adasdsad234343434\");\r\n//\r\n\r\n//        /**\r\n//         * Configure the payment system\r\n//         * Initialise the payment system without authorization\r\n//         *\r\n//         */\r\n            PaymentConfiguration.init(\"https://www.google.com/\");\r\n\r\n        //iniliase the preference object\r\n        PreferenceManager.getInstance().init(this);\r\n\r\n        GSMAApi.getInstance().init(this, new PaymentInitialiseInterface() {\r\n            @Override\r\n            public void onSuccess(Token token) {\r\n                Log.d(\"TAG\", \"onSuccess: \"+token);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(GSMAError gsmaError) {\r\n                Log.d(\"TAG\", \"onFailure: \"+gsmaError);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        createTransactionObject();\r\n\r\n        /**\r\n         * API for checking Balance.\r\n         */\r\n\r\n        btnBalance.setOnClickListener(v -> SDKManager.getInstance().getBalance(\"1\", new BalanceInterface() {\r\n            @Override\r\n            public void onValidationError(ErrorObject errorObject) {\r\n                Toast.makeText(MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();\r\n                Log.d(\"TAG\", \"onValidationError: \"+new Gson().toJson(errorObject));\r\n            }\r\n\r\n            @Override\r\n            public void onBalanceSuccess(Balance balance) {\r\n                txtResponse.setText(new StringBuilder().append(balance.getCurrentBalance()).append(\" \").append(balance.getAccountStatus()).toString());\r\n                Log.d(\"TAG\", \"onBalanceSuccess: \"+new Gson().toJson(balance));\r\n            }\r\n\r\n            @Override\r\n            public void onBalanceFailure(GSMAError gsmaError) {\r\n                txtResponse.setText(new StringBuilder().append(getString(R.string.error)).append(new Gson().toJson(gsmaError.getErrorBody())));\r\n                Log.d(\"TAG\", \"onBalanceFailure: \"+new Gson().toJson(gsmaError));\r\n            }\r\n        }));\r\n\r\n//        /**\r\n//         * API to generate token\r\n//         */\r\n//        btnToken.setOnClickListener(v -> SDKManager.getInstance().getToken(\"59vthmq3f6i15v6jmcjskfkmh\", \"ef8tl4gihlpfd7r8jpc1t1nda33q5kcnn32cj375lq6mg2nv7rb\", new TokenInterface() {\r\n//            @Override\r\n//            public void onTokenSuccess(Token token) {\r\n//                txtResponse.setText(\"Token :\" + token.getAccessToken());\r\n//                PaymentConfiguration.setAuthToken(MainActivity.this,token.getAccessToken());\r\n//            }\r\n//\r\n//            @Override\r\n//            public void onTokenFailure(GSMAError gsmaError) {\r\n//\r\n//            }\r\n//\r\n//        }));\r\n\r\n        /**\r\n         * API for Merchant Pay\r\n         */\r\n        btnPayeeInitiated.setOnClickListener(v -> SDKManager.getInstance().merchantPay(\"merchantpay\", transactionRequest, new RequestStateInterface() {\r\n            @Override\r\n            public void onValidationError(ErrorObject errorObject) {\r\n                Toast.makeText(MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();\r\n                Log.d(\"TAG\", \"onValidationError: \"+new Gson().toJson(errorObject));\r\n            }\r\n\r\n            @Override\r\n            public void onRequestStateSuccess(RequestStateObject requestStateObject) {\r\n                txtResponse.setText(\"Correlation ID :\" + requestStateObject.getServerCorrelationId());\r\n                serverCorrelationId = requestStateObject.getServerCorrelationId();\r\n            }\r\n\r\n            @Override\r\n            public void onRequestStateFailure(GSMAError gsmaError) {\r\n                txtResponse.setText(\"Error: \"+gsmaError.getErrorCode());\r\n          }\r\n\r\n        }));\r\n\r\n\r\n        /**\r\n         * API to view Request state.\r\n         */\r\n\r\n        btnRefund.setOnClickListener(v->SDKManager.getInstance().getRefundMerchantPay(transactionRequest, new RefundInterface() {\r\n            @Override\r\n            public void onRefundSuccess(Refund refund) {\r\n                Log.d(\"TAG\", \"onRefundSuccess\"+refund.getServerCorrelationId());\r\n            }\r\n\r\n            @Override\r\n            public void onRefundFailure(GSMAError gsmaError) {\r\n                txtResponse.setText(new StringBuilder().append(getString(R.string.error)).append(new Gson().toJson(gsmaError.getErrorBody())));\r\n                Log.d(\"TAG\", \"onRequestStateFailure: \"+new Gson().toJson(gsmaError));\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onValidationError(ErrorObject errorObject) {\r\n                Log.d(\"TAG\", \"onValidationError: \"+new Gson().toJson(errorObject));\r\n            }\r\n        }));\r\n        btnRequestState.setOnClickListener(v -> SDKManager.getInstance().viewRequestState(serverCorrelationId, new RequestStateInterface() {\r\n\r\n            @Override\r\n            public void onValidationError(ErrorObject errorObject) {\r\n                Toast.makeText(MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();\r\n                Log.d(\"TAG\", \"onValidationError: \"+new Gson().toJson(errorObject));\r\n            }\r\n\r\n            @Override\r\n            public void onRequestStateSuccess(RequestStateObject requestStateObject) {\r\n                txtResponse.setText(new StringBuilder().append(requestStateObject.getStatus()).append(\" \").append(requestStateObject.getObjectReference()).toString());\r\n                Log.d(\"TAG\", \"onRequestStateSuccess: \"+new Gson().toJson(requestStateObject));\r\n                transactionRef = requestStateObject.getObjectReference();\r\n            }\r\n\r\n            @Override\r\n            public void onRequestStateFailure(GSMAError gsmaError) {\r\n                txtResponse.setText(new StringBuilder().append(getString(R.string.error)).append(new Gson().toJson(gsmaError.getErrorBody())));\r\n                Log.d(\"TAG\", \"onRequestStateFailure: \"+new Gson().toJson(gsmaError));\r\n            }\r\n\r\n        }));\r\n\r\n        /**\r\n         * API to view Transaction details.\r\n         */\r\n\r\n        btnTransaction.setOnClickListener(v -> SDKManager.getInstance().viewTransaction(transactionRef, new TransactionInterface() {\r\n\r\n            @Override\r\n            public void onValidationError(ErrorObject errorObject) {\r\n                Toast.makeText(MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();\r\n                Log.d(\"TAG\", \"onValidationError: \"+new Gson().toJson(errorObject));\r\n            }\r\n\r\n            @Override\r\n            public void onTransactionSuccess(TransactionObject transactionObject) {\r\n                txtResponse.setText(new StringBuilder().append(transactionObject.getTransactionStatus()).append(\" \").append(transactionObject.getAmount()).toString());\r\n                Log.d(\"TAG\", \"onTransactionSuccess: \"+new Gson().toJson(transactionObject));\r\n            }\r\n\r\n            @Override\r\n            public void onTransactionFailure(GSMAError gsmaError) {\r\n                txtResponse.setText(new StringBuilder().append(getString(R.string.error)).append(new Gson().toJson(gsmaError.getErrorBody())));\r\n                Log.d(\"TAG\", \"onTransactionFailure: \"+new Gson().toJson(gsmaError));\r\n            }\r\n\r\n        }));\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     *Transaction Object for Merchant Pay.\r\n     */\r\n    private void createTransactionObject() {\r\n        transactionRequest = new TransactionRequest();\r\n        ArrayList<DebitPartyItem> debitPartyList = new ArrayList<>();\r\n        ArrayList<CreditPartyItem> creditPartyList = new ArrayList<>();\r\n        DebitPartyItem debitPartyItem = new DebitPartyItem();\r\n        CreditPartyItem creditPartyItem = new CreditPartyItem();\r\n\r\n        debitPartyItem.setKey(\"accountid\");\r\n        debitPartyItem.setValue(\"2999\");\r\n        debitPartyList.add(debitPartyItem);\r\n\r\n        creditPartyItem.setKey(\"accountid\");\r\n        creditPartyItem.setValue(\"2999\");\r\n        creditPartyList.add(creditPartyItem);\r\n\r\n        transactionRequest.setDebitParty(debitPartyList);\r\n        transactionRequest.setCreditParty(creditPartyList);\r\n        transactionRequest.setAmount(\"200.00\");\r\n        transactionRequest.setCurrency(\"RWF\");\r\n\r\n        String gson = new Gson().toJson(transactionRequest, TransactionRequest.class);\r\n        Log.d(\"TAG\", \"createTransactionObject: \" + gson);\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GSMATest/src/main/java/com/gsmasdk/gsmatest/MainActivity.java b/GSMATest/src/main/java/com/gsmasdk/gsmatest/MainActivity.java
--- a/GSMATest/src/main/java/com/gsmasdk/gsmatest/MainActivity.java	(revision d4f0f22b0af496881dd32fce1ff6ca299d5271f5)
+++ b/GSMATest/src/main/java/com/gsmasdk/gsmatest/MainActivity.java	(date 1634639035662)
@@ -198,7 +198,8 @@
 
             @Override
             public void onValidationError(ErrorObject errorObject) {
-                Toast.makeText(MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();
+                Toast.makeText(
+                        MainActivity.this, errorObject.getErrorDescription(),Toast.LENGTH_SHORT).show();
                 Log.d("TAG", "onValidationError: "+new Gson().toJson(errorObject));
             }
 
